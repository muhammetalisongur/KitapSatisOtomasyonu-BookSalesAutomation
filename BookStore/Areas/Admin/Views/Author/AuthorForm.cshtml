@using Entities.Concrete
@model Author

@{
    ViewBag.Title = "YazarForm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var result = (BookStore.Areas.Admin.ViewModel.MessageViewModel)TempData["message"];

}
<!-- breadcrumbs -->
<div class="w3l_agileits_breadcrumbs">
    <div class="w3l_agileits_breadcrumbs_inner">
        <ul>
            <li><a href="~/Admin/Kategori">Anasayfa</a><span>«</span></li>

            <li>Yazar</li>
        </ul>
    </div>
</div>
<!-- //breadcrumbs -->



<div id="mesaj"></div>
<div class="inner_content_w3_agile_info two_in">
    <h2 class="w3_inner_tittle">Ekle &amp; Duzenle</h2>
    <!-- tables -->

    <div class="agile-tables">
        <b style="font-size:18px">
            @if (TempData["message"] != null)
            {
                if (result.Status == false)
                {

                    <div class="alert alert-danger">
                        @result.Message <b style="font-size:20px"><a href="@result.Url">@result.LinkText</a></b>
                    </div>
                }

            }
        </b>
        <div class="w3l-table-info agile_info_shadow">
            @using (Html.BeginForm("Save", "Author", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">

                    @Html.LabelFor(model => model.AuthorImage)
                    <div style="display:flex" class="col-2">
                        @Html.EditorFor(x => x.AuthorImage, new { htmlAttributes = new { @class = "form-control", type = "file", style = "height:auto", accept = "image/*", title = "Resim Yukle", onchange = "prewIMG(event)" } })
                        <img src="@Model.AuthorImage" height="52" width="52" style="position: absolute; left: calc(100% - 9.8em); " id="imgPrew" alt="Resim Yukle" />
                    </div>
                    <br />

                    @Html.LabelFor(m => m.AuthorName)
                    @Html.TextBoxFor(m => m.AuthorName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AuthorName)
                    <br />

                    @Html.LabelFor(m => m.AuthorSurname)
                    @Html.TextBoxFor(m => m.AuthorSurname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AuthorSurname)
                    <br />

                    @Html.LabelFor(m => m.AuthorBiography)
                    @Html.TextAreaFor(m => m.AuthorBiography, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AuthorBiography)
                    <br />
                    @if (ViewBag.Country != null)
                    {
                        @Html.LabelFor(m => m.AuthorCountryID)
                        @Html.DropDownListFor(m => m.AuthorCountryID, ViewBag.Country as SelectList, "-- Ülke Seçiniz --", new { @class = "form-control select-add-placeholder", @style = "height:auto", })
                        @Html.ValidationMessageFor(x => x.AuthorCountryID)
                    }
                    else
                    {
                        @Html.LabelFor(m => m.AuthorCountryID)
                        @Html.DropDownListFor(m => m.AuthorCountryID, new SelectList(""), "-- Ülke Bulunumadı --", new { @class = "form-control select-add-placeholder", @style = "height:auto", })
                        @Html.ValidationMessageFor(x => x.AuthorCountryID)
                    }
                    <br />

                    @if (ViewBag.CityList != null)
                    {
                        @Html.LabelFor(m => m.AuthorCityID)
                        @Html.DropDownListFor(m => m.AuthorCityID, ViewBag.CityList as SelectList, "-- Şehir Seçiniz --", new { @class = "form-control select-add-placeholder", @style = "height:auto", })
                        @Html.ValidationMessageFor(x => x.AuthorCityID)
                    }
                    else
                    {
                        @Html.LabelFor(m => m.AuthorCityID)
                        @Html.DropDownListFor(m => m.AuthorCityID, new SelectList(""), "-- Şehir Seçiniz --", new { @class = "form-control select-add-placeholder", @style = "height:auto", })
                        @Html.ValidationMessageFor(x => x.AuthorCityID)
                    }

                </div>

                @Html.HiddenFor(x => x.ID)
                <button type="submit" class="btn btn-success">Kaydet</button>

            }

        </div>

    </div>
</div>

@*bu iki kod gidip layouta yazilacak*@
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script>

    // Resim Önizleme
    var prewIMG = function (event) {
        var result = document.getElementById("imgPrew");
        result.src = URL.createObjectURL(event.target.files[0]);
    };


    // Ülke Seçildiğinde Şehirleri Getir

    $(document).ready(function () {
        $("#AuthorCountryID").change(function () {
            var countryId = $(this).val();
            $.ajax({
                url: "/Admin/Author/GetCity?id=" + countryId,
                type: "POST",
                contentType: "html",
                success: function (response) {
                    debugger
                    $("#AuthorCityID").empty();
                    $("#AuthorCityID").append(response);

                }
            });
        });
    });

</script>
